// =================================================================================================
// Azure Resource Graph KQL – AKS 
// =================================================================================================
// 내용
//   [AKS-01] AKS 총계 / 상태별 카운트
//   [AKS-02] AKS 목록 (구독/리소스그룹/지역/버전)
//   [AKS-03] 클러스터별 노드풀 상세 (노드 수, 오토스케일, 사이즈, OS, 모드)
//   [AKS-04] 최근 24시간 AKS 변경 이력 (Create/Update/Delete/Start/Stop)
// =================================================================================================



// -------------------------------------------------------------------------------------------------
// [AKS-01] AKS 총계 / 상태별 카운트
// - provisioningState/powerState 기준 집계
// -------------------------------------------------------------------------------------------------
Resources
| where type =~ "microsoft.containerservice/managedclusters"
| extend provisioningState = tostring(properties.provisioningState),
         powerState        = tolower(tostring(properties.powerState.code))  // 예: "running", "stopped"
| summarize
    totalAKSCount   = count(),
    runningAKSCount = countif(powerState == "running" or provisioningState =~ "Succeeded"),
    stoppedAKSCount = countif(powerState == "stopped"),
    failedAKSCount  = countif(provisioningState =~ "Failed")



// -------------------------------------------------------------------------------------------------
// [AKS-02] AKS 목록 (구독/리소스그룹/지역/버전)
// - Subscription 이름 조인
// -------------------------------------------------------------------------------------------------
Resources
| where type =~ "microsoft.containerservice/managedclusters"
| extend kubernetesVersion = tostring(properties.kubernetesVersion)
| join kind=leftouter (
    ResourceContainers
    | where type =~ "microsoft.resources/subscriptions"
    | project subscriptionId, subscriptionName = name
) on subscriptionId
| project
    subscriptionName,
    name,
    resourceGroup,
    location,
    kubernetesVersion
| order by subscriptionName, resourceGroup, name



// -------------------------------------------------------------------------------------------------
// [AKS-03] 클러스터별 노드풀 상세
// - 노드 수, 오토스케일 범위, VM 사이즈, OS, 모드(User/System) 등
// -------------------------------------------------------------------------------------------------
Resources
| where type =~ "microsoft.containerservice/managedclusters"
| extend clusterName       = tostring(name),
         clusterVersion    = tostring(properties.kubernetesVersion),
         powerState        = tostring(properties.powerState.code),
         provisioningState = tostring(properties.provisioningState),
         pools             = properties.agentPoolProfiles
| mv-expand pool = pools
| where toint(pool['count']) > 0
| extend
    nodePoolName    = tostring(pool.name),
    instanceCount   = toint(pool['count']),
    enableAutoScale = bool(pool.enableAutoScaling),
    minNodeCount    = iif(enableAutoScale, toint(pool.minCount), int(null)),
    maxNodeCount    = iif(enableAutoScale, toint(pool.maxCount), int(null)),
    vmSize          = tostring(pool.vmSize),
    osType          = tostring(pool.osType),
    nodePoolMode    = tostring(pool.mode) // User/System
| project
    clusterName,
    resourceGroup,
    location,
    clusterVersion,
    powerState,
    provisioningState,
    nodePoolName,
    instanceCount,
    minNodeCount,
    maxNodeCount,
    enableAutoScale,
    vmSize,
    osType,
    nodePoolMode
| order by clusterName, resourceGroup, nodePoolName



// -------------------------------------------------------------------------------------------------
// [AKS-04] 최근 24시간 AKS 변경 이력 (Create/Update/Delete/Start/Stop)
// - resourcechanges 테이블에서 AKS(managedClusters)만 추출
// - operation을 가독성 있게 분류
// -------------------------------------------------------------------------------------------------
resourcechanges
| where properties.targetResourceType =~ "Microsoft.ContainerService/managedClusters"
| extend ridParts      = split(properties.targetResourceId, "/"),
         subscriptionId= tostring(ridParts[2]),
         resourceGroup = tostring(ridParts[4]),
         aksName       = tostring(ridParts[8]),
         changeTime    = todatetime(properties.changeAttributes.timestamp)
| where changeTime > ago(24h)
| extend operation = case(
    properties.changeAttributes.operation contains "/write",         "Create/Update",
    properties.changeAttributes.operation contains "/delete/action", "Delete",
    properties.changeAttributes.operation contains "/stop/action",   "Stop",
    properties.changeAttributes.operation contains "/start/action",  "Start",
    "Unknown")
| where operation != "Unknown"
| join kind=leftouter (
    resourcecontainers
    | where type =~ "microsoft.resources/subscriptions"
    | project subscriptionId, subscriptionName = name
) on subscriptionId
| project
    changeTime,
    aksName,
    resourceGroup,
    subscriptionName,
    operation,
    changedBy = tostring(properties.changeAttributes.changedBy)
| order by changeTime desc
| limit 100
